// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Autentica usuário e retorna token JWT (Keycloak)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login de usuário",
                "parameters": [
                    {
                        "description": "Credenciais de login",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login realizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Credenciais inválidas",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Cria um novo usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Registrar novo usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuário criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/beers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna uma lista com todos os estilos de cerveja cadastrados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Beer Styles"
                ],
                "summary": "Listar todos os estilos de cerveja",
                "responses": {
                    "200": {
                        "description": "Lista de estilos de cerveja",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BeerStyleResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria um novo estilo de cerveja no sistema (requer autenticação de admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Beer Styles"
                ],
                "summary": "Criar novo estilo de cerveja",
                "parameters": [
                    {
                        "description": "Dados do estilo de cerveja",
                        "name": "beer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BeerStyleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Estilo de cerveja criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/dto.BeerStyleResponse"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Acesso negado - requer role admin",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/beers/recommend": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna o estilo de cerveja mais adequado para a temperatura informada junto com uma playlist do Spotify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Beer Recommendation"
                ],
                "summary": "Recomendação de cerveja por temperatura",
                "parameters": [
                    {
                        "description": "Temperatura para recomendação",
                        "name": "temperature",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TemperatureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recomendação de cerveja e playlist",
                        "schema": {
                            "$ref": "#/definitions/dto.RecommendationResponse"
                        }
                    },
                    "400": {
                        "description": "Temperatura inválida",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Nenhum estilo de cerveja encontrado ou playlist não disponível",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/beers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna um estilo de cerveja específico pelo seu UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Beer Styles"
                ],
                "summary": "Buscar estilo de cerveja por ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID do estilo de cerveja",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estilo de cerveja encontrado",
                        "schema": {
                            "$ref": "#/definitions/dto.BeerStyleResponse"
                        }
                    },
                    "400": {
                        "description": "UUID inválido",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Estilo de cerveja não encontrado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza um estilo de cerveja existente (requer autenticação de admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Beer Styles"
                ],
                "summary": "Atualizar estilo de cerveja",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID do estilo de cerveja",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados do estilo de cerveja",
                        "name": "beer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BeerStyleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estilo de cerveja atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/dto.BeerStyleResponse"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Acesso negado - requer role admin",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Estilo de cerveja não encontrado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove um estilo de cerveja do sistema (requer autenticação de admin)",
                "tags": [
                    "Beer Styles"
                ],
                "summary": "Deletar estilo de cerveja",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID do estilo de cerveja",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estilo de cerveja deletado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "UUID inválido",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Acesso negado - requer role admin",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Estilo de cerveja não encontrado",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BeerStyleRequest": {
            "type": "object",
            "required": [
                "max_temperature",
                "min_temperature",
                "name"
            ],
            "properties": {
                "max_temperature": {
                    "type": "number",
                    "example": 10
                },
                "min_temperature": {
                    "type": "number",
                    "example": 7
                },
                "name": {
                    "type": "string",
                    "example": "IPA"
                }
            }
        },
        "dto.BeerStyleResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "max_temperature": {
                    "type": "number",
                    "example": 10
                },
                "min_temperature": {
                    "type": "number",
                    "example": 7
                },
                "name": {
                    "type": "string",
                    "example": "IPA"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Beer style not found"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "logan"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 300
                },
                "not-before-policy": {
                    "type": "integer",
                    "example": 0
                },
                "refresh_expires_in": {
                    "type": "integer",
                    "example": 1800
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9..."
                },
                "scope": {
                    "type": "string",
                    "example": "profile email"
                },
                "session_state": {
                    "type": "string",
                    "example": "4d81e047-491f-47b2-8ce7-59e6c9e2fb9c"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "dto.RecommendationResponse": {
            "type": "object",
            "properties": {
                "beerStyle": {
                    "type": "string",
                    "example": "IPA"
                },
                "playlist": {
                    "$ref": "#/definitions/github_com_GoLogann_karhub-beer_infra_spotify.PlaylistInfo"
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "logan@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"user\"]"
                    ]
                },
                "username": {
                    "type": "string",
                    "example": "logan"
                }
            }
        },
        "dto.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "user created"
                }
            }
        },
        "dto.SuccessMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "beer style deleted"
                }
            }
        },
        "dto.TemperatureRequest": {
            "type": "object",
            "required": [
                "temperature"
            ],
            "properties": {
                "temperature": {
                    "type": "number",
                    "example": -7
                }
            }
        },
        "github_com_GoLogann_karhub-beer_infra_spotify.PlaylistInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_GoLogann_karhub-beer_infra_spotify.TrackInfo"
                    }
                }
            }
        },
        "github_com_GoLogann_karhub-beer_infra_spotify.TrackInfo": {
            "type": "object",
            "properties": {
                "artist": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Digite 'Bearer ' seguido do seu JWT token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "5abee0acbe83.ngrok-free.app",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "KarHub Beer API",
	Description:      "API para gerenciar estilos de cerveja e encontrar o estilo ideal por temperatura\n\nEsta API faz parte do desafio de criar uma cervejeira inteligente.\nEla permite gerenciar estilos de cerveja (CRUD) e recomendar o melhor estilo\nbaseado na temperatura, incluindo uma playlist do Spotify relacionada ao estilo.\n\n## Autenticação\nEsta API utiliza JWT Bearer tokens para autenticação.\nAlgumas operações requerem role de admin.\n\n## Regras de Negócio\n- Todo estilo de cerveja tem uma temperatura mínima e máxima\n- O cálculo para seleção do estilo é baseado na média das temperaturas\n- Em caso de empate, a ordenação é alfabética\n- A API integra com Spotify para buscar playlists relacionadas ao estilo",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
